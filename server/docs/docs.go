// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Tairyoku",
            "url": "https://github.com/Tairyoku"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/change/icon": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Користувач надсилає новий файл зображення. Замінює зображення на нове.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change username",
                "responses": {
                    "200": {
                        "description": "icon changed",
                        "schema": {
                            "$ref": "#/definitions/auth.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "incorrect user data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "delete icon error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/change/password": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Користувач надсилає поточний та новий паролі.\nПісля перевірки правильності ведення поточного паролю, змінює пароль на новий.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "actual and new password",
                        "name": "passwords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "password changed",
                        "schema": {
                            "$ref": "#/definitions/auth.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "incorrect password",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "incorrect user data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "update password error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/change/username": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Користувач надсилає новий нікнейм.\nПісля перевірки нового нікнейму на унікальність, змінює нікнейм на новий.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change username",
                "parameters": [
                    {
                        "description": "New username",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.UsernameInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "username changed",
                        "schema": {
                            "$ref": "#/definitions/auth.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "incorrect request data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "incorrect user data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "update username error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/get-me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує у header запиту токен, повертає ID користувача.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Decoded user ID",
                "responses": {
                    "200": {
                        "description": "result is user ID",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/auth.IdResponse"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "Користувач відправляє ім'я та пароль.\nСервер поверне token існуючого користувача або помилку якщо користувача не існує.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate a new user token",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is user token",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "incorrect request data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "incorrect password",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "check user error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Користувач відправляє ім'я та пароль.\nЗа отриманими даними буде створено нового користувача.\nСервер поверне token нового користувача.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new user",
                "operationId": "add-new-user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is user token",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Password must be at least 6 symbols",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "username is already used",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "generate token error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ім'я чату. Створює новий чат. Повертає ID чату.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Create a new public chat",
                "parameters": [
                    {
                        "description": "Chat name",
                        "name": "chat_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.NameInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is chat ID",
                        "schema": {
                            "$ref": "#/definitions/chat.IdResponse"
                        }
                    },
                    "400": {
                        "description": "name is empty",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "add user to chat error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/search/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує частину імені користувача.\nПовертає список користувачів, ім'я яких повністю або частково збігається.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get found users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slice of chats",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return found users",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatListResponse"
                        }
                    },
                    "500": {
                        "description": "found chats error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/users/{id}/private": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nПовертає список приватних чатів користувача.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get user` + "`" + `s private chats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is list of chats",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatListResponse"
                        }
                    },
                    "500": {
                        "description": "get users error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/users/{id}/public": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nПовертає список публічних чатів, в яких є користувач.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get user` + "`" + `s public chats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is list of chats",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatListResponse"
                        }
                    },
                    "500": {
                        "description": "get chats error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{chatId}/messages": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує текст повідомлення.\nСтворює повідомлення.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Create message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message text",
                        "name": "message_text",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messages.TextInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return message ID",
                        "schema": {
                            "$ref": "#/definitions/messages.IdResponse"
                        }
                    },
                    "400": {
                        "description": "body is empty",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "create message error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{chatId}/messages/limit/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID чату.\nПовертає певну кількість повідомлень чату.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Get limited message list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return message ID",
                        "schema": {
                            "$ref": "#/definitions/messages.MessageListResponse"
                        }
                    },
                    "500": {
                        "description": "get limit error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{chatId}/messages/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID повідомлення.\nПовертає повідомлення.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Get message by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return message ID",
                        "schema": {
                            "$ref": "#/definitions/messages.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "get message error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID чату. Повертає дані чату.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get chat info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is chat data",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "get chat error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID чату. Видаляє чат.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Delete chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chat  deleted",
                        "schema": {
                            "$ref": "#/definitions/chat.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "messages delete error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{id}/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID чату та користувача.\nДодає користувача до чату.\nПовертає ID зв'язку між чатами та користувачами.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Add user to chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.UserIdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is ID of chats and users relations",
                        "schema": {
                            "$ref": "#/definitions/chat.IdResponse"
                        }
                    },
                    "400": {
                        "description": "incorrect request data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "add user to chat error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{id}/delete": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID чату та користувача.\nВидаляє користувача з чату.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Delete user from chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.UserIdInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user deleted from chat",
                        "schema": {
                            "$ref": "#/definitions/chat.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "incorrect request data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "messages delete error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{id}/icon": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID чату та файл зображення.\nОновлює зображення користувача.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Change chat icon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "icon changed",
                        "schema": {
                            "$ref": "#/definitions/chat.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "incorrect chat data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "delete icon error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{id}/link": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID чату.\nПовертає дані чату та, якщо чат приватний, користувача.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get chat (and if chat is private - user) info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is chat data (and user data)",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatAndUserResponse"
                        }
                    },
                    "500": {
                        "description": "get users error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{id}/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID чату. Повертає список користувачів чату.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get chat` + "`" + `s users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "result is list of chat` + "`" + `s users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "get users error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{userId}/private": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID другого користувача приватного чату.\nЯкщо чат вже існує, повертає його ID.\nЯкщо чату не існує, створює його, та повертає ID чату.\nЯкщо другий користувач є поточним користувачем,\nстворює (за необхідністю) персональний чат та повертає його ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Create private chat and/or get chat ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return chat ID",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatIdResponse"
                        }
                    },
                    "500": {
                        "description": "add second user to chat error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/search/{username}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує частину імені чату.\nПовертає список користувачів, ім'я яких повністю або частково збігається.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get found chats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slice of users",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "lisl of found chats",
                        "schema": {
                            "$ref": "#/definitions/users.ListResponse"
                        }
                    },
                    "500": {
                        "description": "search users error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nПовертає дані користувача.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user` + "`" + `s data by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return user` + "`" + `s data",
                        "schema": {
                            "$ref": "#/definitions/users.UserResponse"
                        }
                    },
                    "500": {
                        "description": "get user error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/accept": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nПідтверджує запит на дружбу поточного користувача з отриманим.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Accept friendship invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invitation accepted",
                        "schema": {
                            "$ref": "#/definitions/users.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "update status error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/addToBL": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nБлокує користувача.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Block user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user is blocked",
                        "schema": {
                            "$ref": "#/definitions/users.IdResponse"
                        }
                    },
                    "500": {
                        "description": "add status error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nПовертає списки відносин між користувачем та іншими користувачами.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user` + "`" + `s relationship lists by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return user` + "`" + `s status lists",
                        "schema": {
                            "$ref": "#/definitions/users.StatusesListResponse"
                        }
                    },
                    "500": {
                        "description": "friend requires list error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/cancel": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nВидаляє запит на дружбу поточного користувача з отриманим.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Cancel friendship invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invite deleted",
                        "schema": {
                            "$ref": "#/definitions/users.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "delete status error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/deleteFriend": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nВидаляє користувача зі списку друзів.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete friend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "friend deleted",
                        "schema": {
                            "$ref": "#/definitions/users.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "delete status error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/deleteFromBlacklist": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nВидаляє користувача зі списку заблокованих.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete from blacklist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user deleted from black list",
                        "schema": {
                            "$ref": "#/definitions/users.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "delete status error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/invite": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nСтворює запит на дружбу поточного користувача з отриманим.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create friendship invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "require is sent",
                        "schema": {
                            "$ref": "#/definitions/users.IdResponse"
                        }
                    },
                    "500": {
                        "description": "add status error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/refuse": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отримує ID користувача.\nВідхиляє запит на дружбу поточного користувача з отриманим.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Refuse friendship invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invitation refused",
                        "schema": {
                            "$ref": "#/definitions/users.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "delete status error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ChangePassword": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "auth.IdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "auth.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "auth.SignInInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.UsernameInput": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "chat.ChatAndUserResponse": {
            "type": "object",
            "properties": {
                "chat": {
                    "$ref": "#/definitions/models.Chat"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "chat.ChatIdResponse": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                }
            }
        },
        "chat.ChatListResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Chat"
                    }
                }
            }
        },
        "chat.ChatResponse": {
            "type": "object",
            "properties": {
                "chat": {
                    "$ref": "#/definitions/models.Chat"
                }
            }
        },
        "chat.IdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "chat.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "chat.NameInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "chat.UserIdInput": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "messages.IdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "messages.MessageListResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "messages.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/definitions/models.Message"
                }
            }
        },
        "messages.TextInput": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "models.Chat": {
            "type": "object",
            "required": [
                "icon",
                "name"
            ],
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "types": {
                    "type": "string"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "author": {
                    "type": "integer"
                },
                "chat_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "sent_at": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "icon",
                "password",
                "username"
            ],
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "responses.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "users.IdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "users.ListResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "users.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "users.StatusesListResponse": {
            "type": "object",
            "properties": {
                "blacklist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "friends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "invites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "onBlacklist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "users.UserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8000",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "Server API",
	Description:      "Серверна частина онлайн чату.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
